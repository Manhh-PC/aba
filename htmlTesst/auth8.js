document.addEventListener("DOMContentLoaded", async function () {
    const API_URL = "https://2szhs6-8080.csb.app";
  
    // Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p v√† c·∫≠p nh·∫≠t giao di·ªán
    try {
      let response = await fetch(`${API_URL}/currentUser`);
      let user = await response.json();
      const dangNhapDiv = document.getElementById("dangNhap");
  
      if (user && user.id) {
        console.log("üîí ƒê√£ ƒëƒÉng nh·∫≠p, ch·∫∑n truy c·∫≠p login.html");
        if (window.location.pathname.includes("login.html")) {
          window.location.replace("index.html");
        }
        dangNhapDiv.innerHTML = `
          <img src="Manhh.png" alt="Logo" class="loGo" />
          <a href="./account.html" class="logIna">
            <div class="dangNhap1" style="margin-right: 10px">
              <i class="fa-regular fa-user"></i>
              <p>T√†i kho·∫£n</p>
            </div>
          </a>
          <a href="cart.html">
            <div class="gioHang1">
              <div class="notification">
                <i class="fa-solid fa-cart-shopping"></i>
              </div>
              <p>Gi·ªè h√†ng</p>
            </div>
          </a>
        `;
      } else {
        dangNhapDiv.innerHTML = `
          <img src="Manhh.png" alt="Logo" class="loGo" />
          <a href="./login.html" class="logIna">
            <div class="dangNhap1" style="margin-right: 10px">
              <i class="fa-regular fa-user"></i>
              <p>ƒêƒÉng nh·∫≠p</p>
            </div>
          </a>
          <a href="cart.html">
            <div class="gioHang1">
              <div class="notification">
                <i class="fa-solid fa-cart-shopping"></i>
              </div>
              <p>Gi·ªè h√†ng</p>
            </div>
          </a>
        `;
      }
      if (typeof window.updateCartNotification === "function") {
        window.updateCartNotification();
      }
    } catch (error) {
      console.error("L·ªói khi ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p:", error);
    }
  
    // üîπ ƒêƒÇNG K√ù T√ÄI KHO·∫¢N
    const registerBtn = document.getElementById("registerBtn");
    if (registerBtn) {
      registerBtn.addEventListener("click", async (e) => {
        e.preventDefault();
        let name = document.getElementById("registerName").value.trim();
        let email = document.getElementById("registerEmail").value.trim();
        let password = document.getElementById("registerPassword").value.trim();
  
        if (!name || !email || !password) {
          alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
          return;
        }
  
        // Ki·ªÉm tra ƒë·ªãnh d·∫°ng email
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]{2,}$/;
        if (!emailRegex.test(email)) {
          alert("Email kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng! Vui l√≤ng nh·∫≠p theo d·∫°ng username@domain.com (v√≠ d·ª•: username@gmail.com).");
          return;
        }
  
        try {
          let response = await fetch(`${API_URL}/users`);
          let users = await response.json();
          let userExists = users.some((user) => user.email === email);
  
          if (userExists) {
            alert("Email ƒë√£ t·ªìn t·∫°i. Vui l√≤ng ch·ªçn email kh√°c.");
          } else {
            let newUser = { id: generateID(), name, email, password, cart: [] };
            await fetch(`${API_URL}/users`, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(newUser),
            });
            alert("ƒêƒÉng k√Ω th√†nh c√¥ng! H√£y ƒëƒÉng nh·∫≠p ƒë·ªÉ ti·∫øp t·ª•c.");
            window.location.href = "login.html";
          }
        } catch (error) {
          alert("L·ªói k·∫øt n·ªëi ƒë·∫øn server! Ch·∫°y file json server ƒë·ªÉ kh·∫Øc ph·ª•c.");
        }
      });
    }
  
    function generateID() {
      return Math.random().toString(36).substr(2, 4);
    }
  
    // üîπ ƒêƒÇNG NH·∫¨P
    const loginBtn = document.getElementById("loginBtn");
    if (loginBtn) {
      loginBtn.addEventListener("click", async (e) => {
        e.preventDefault();
        let email = document.getElementById("loginEmail").value.trim();
        let password = document.getElementById("loginPassword").value.trim();
  
        if (!email || !password) {
          alert("Vui l√≤ng nh·∫≠p email v√† m·∫≠t kh·∫©u!");
          return;
        }
  
        try {
          let response = await fetch(`${API_URL}/users`);
          let users = await response.json();
          let user = users.find((u) => u.email === email && u.password === password);
  
          if (user) {
            let localCart = JSON.parse(localStorage.getItem("cart")) || [];
            user.cart = user.cart || [];
            let mergedCart = [...user.cart];
            localCart.forEach((localItem) => {
              let existingItem = mergedCart.find((item) => item.id === localItem.id);
              if (!existingItem) {
                mergedCart.push(localItem);
              }
            });
            user.cart = mergedCart;
  
            await fetch(`${API_URL}/currentUser`, {
              method: "PUT",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(user),
            });
  
            await fetch(`${API_URL}/users/${user.id}`, {
              method: "PUT",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(user),
            });
  
            localStorage.setItem("cart", JSON.stringify(mergedCart));
            alert("ƒêƒÉng nh·∫≠p th√†nh c√¥ng!");
            window.location.href = "index.html";
          } else {
            alert("Sai email ho·∫∑c m·∫≠t kh·∫©u!");
          }
        } catch (error) {
          alert("L·ªói k·∫øt n·ªëi ƒë·∫øn server! Vui l√≤ng ch·∫°y json server");
        }
      });
    }
  });